{
  "version": 3,
  "sources": ["src/app/components/Components_Chart/charts/ChartTwoRounded/chartTwoRounded.component.ts", "src/app/components/Components_Chart/charts/ChartTwoRounded/chartTwoRounded.html"],
  "sourcesContent": ["import {\n  Component,\n  OnDestroy,\n  HostListener,\n  effect,\n} from '@angular/core';\nimport * as echarts from 'echarts';\nimport { LocalStorage } from '../../../../servises/LocalStorage.service';\nimport { DatePipe } from '@angular/common';\nimport { Filter } from '../../../../servises/filter.service';\nimport { IOperation } from '../../../../models/dataTypes.model';\nimport { Theme } from '../../../../servises/theme.service';\n\n@Component({\n  selector: 'my-chart-two-rounded',\n  providers: [DatePipe],\n  templateUrl: './chartTwoRounded.html',\n})\nexport class ChartTwoRounded implements OnDestroy {\n  private _incomeChart: echarts.ECharts | undefined = undefined;\n  private _expensChart: echarts.ECharts | undefined = undefined;\n  private _incomeOption: any | undefined = undefined;\n  private _expensOption: any | undefined = undefined;\n\n  constructor(\n    private localStorage: LocalStorage,\n    private datePipe: DatePipe,\n    public filter: Filter,\n    public theme: Theme\n  ) {\n    effect(() => {\n      this.updateIncomeOption();\n      this.updateExpensOption();\n      this.setOption();\n    });\n    effect(() => {\n      this.init();\n      this.setOption();\n    });\n  }\n\n  public setOption(): void {\n    this._incomeChart?.setOption(this._incomeOption);\n    this._expensChart?.setOption(this._expensOption);\n  }\n\n  public init(): void {\n    const theme = this.theme.darkTheme() ? 'dark' : '';\n    const chartDomIncome = document.getElementById('my-chart-rounded-income');\n    const chartDomExpens = document.getElementById('my-chart-rounded-expens');\n    if (!chartDomIncome?.clientHeight || !chartDomExpens?.clientHeight) {\n      return;\n    }\n    this._incomeChart?.dispose();\n    this._expensChart?.dispose();\n    this._incomeChart = echarts.init(chartDomIncome, theme);\n    this._expensChart = echarts.init(chartDomExpens, theme);\n  }\n\n  updateIncomeOption(): void {\n    const incomeData = this.localStorage.filter(this.localStorage.getOperationsByType('income'));\n    this._incomeOption = this.getOption(incomeData, 'Доходы');\n  }\n\n  updateExpensOption(): void {\n    const expensData = this.localStorage.filter(this.localStorage.getOperationsByType('expens'));\n    this._expensOption = this.getOption(expensData, 'Доходы');\n  }\n\n  getOption(data: IOperation[], title?: string) {\n    const formatData = this.format(data);\n    return {\n      backgroundColor: 'transparent',\n      tooltip: {\n        trigger: 'item',\n      },\n      title: {\n        text: `${title}: ${data.reduce((sum, item) => (sum += item.value), 0)} руб.`,\n        position: 'top',\n      },\n\n      series: [\n        {\n          name: 'Категория',\n          type: 'pie',\n          radius: ['40%', '70%'],\n          data: formatData,\n          top: '10%',\n          label: {\n            show: true,\n            position: 'outside',\n          },\n          color: [\n            '#0d6efd', // основной\n            '#0a58ca', // темнее\n            '#3d8bfd', // светлее\n            '#6ea8fe', // еще светлее\n            '#9fcdff', // самый светлый\n            '#084298', // очень темный\n            '#052c65', // максимально темный\n          ],\n        },\n      ],\n    };\n  }\n\n  format(data: IOperation[]): { name: string; value: number }[] {\n    const resultMap = new Map();\n    data.forEach((item) => {\n      const category = item.category;\n      if (!resultMap.has(category)) {\n        resultMap.set(category, { name: category, value: 0 });\n      }\n      const currentValue = resultMap.get(category).value;\n      resultMap.set(category, { name: category, value: currentValue + item.value });\n    });\n    const res = Array.from(resultMap.values());\n    return res;\n  }\n\n  formatDate(date: Date): string | null {\n    const pattern = () => {\n      switch (this.filter.interval()) {\n        case 'day':\n          return 'H';\n        case 'month':\n          return 'd';\n        case 'year':\n          return 'MMMM';\n        default:\n          return 'dd.MM.yyyy';\n      }\n    };\n    return this.datePipe.transform(date, pattern());\n  }\n\n  ngAfterViewInit() {\n    this.init();\n    this.setOption();\n  }\n\n  ngOnDestroy() {\n    this._incomeChart?.dispose();\n    this._expensChart?.dispose();\n  }\n\n  @HostListener('window:resize')\n  onWindowResize() {\n    if (this._incomeChart) {\n      this._incomeChart.resize();\n    }\n    if (this._expensChart) {\n      this._expensChart.resize();\n    }\n  }\n\n  get hasData(): boolean {\n    return this.localStorage.filter(this.localStorage.allOperations()).length > 0;\n  }\n}\n", "<div class=\"position-relative h-100 w-100 d-flex justify-content-around\">\n  <div\n    id=\"my-chart-rounded-income\"\n    [class.opacity-50]=\"!hasData\"\n    style=\"width: 30rem; max-width: 40vw;\"\n  ></div>\n  <div\n    id=\"my-chart-rounded-expens\"\n    [class.opacity-50]=\"!hasData\"\n    style=\"width: 30rem; max-width: 40vw;\"\n  ></div>\n  @if(!hasData){\n  <div\n    class=\"position-absolute top-0 left-0 w-100 h-100 z-3 d-flex justify-content-center align-items-center\"\n  >\n    Нет данных\n  </div>\n  }\n</div>"],
  "mappings": "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",
  "names": []
}

{
  "version": 3,
  "sources": ["src/app/components/Components_Chart/charts/ChartMega/chartMega.component.ts", "src/app/components/Components_Chart/charts/ChartMega/chartMega.html", "src/app/pages/chartPage/chartPage.component.ts", "src/app/pages/chartPage/chartPage.html"],
  "sourcesContent": ["import { Component, OnDestroy, HostListener, effect } from '@angular/core';\nimport * as echarts from 'echarts';\nimport { LocalStorage } from '../../../../servises/LocalStorage.service';\nimport { DatePipe } from '@angular/common';\nimport { Filter } from '../../../../servises/filter.service';\nimport { IOperation } from '../../../../models/dataTypes.model';\nimport { Theme } from '../../../../servises/theme.service';\n\n@Component({\n  selector: 'my-chart-mega',\n  providers: [DatePipe],\n  templateUrl: './chartMega.html',\n})\nexport class ChartMega implements OnDestroy {\n  private _chart: echarts.ECharts | undefined = undefined;\n  private _option: any | undefined = undefined;\n  constructor(\n    private localStorage: LocalStorage,\n    private datePipe: DatePipe,\n    public filter: Filter,\n    public theme: Theme\n  ) {\n    effect(() => {\n      this.updateOption();\n      this.setOption();\n    });\n    effect(() => {\n      this.init();\n      this.setOption();\n    });\n  }\n\n  setOption() {\n    this._chart?.setOption(this._option);\n  }\n\n  init(): void {\n    const theme = this.theme.darkTheme() ? 'dark' : '';\n    const chartDom = document.getElementById('chart-container');\n    this._chart?.dispose();\n    if (chartDom?.clientHeight === 0) return;\n    this._chart = echarts.init(chartDom, theme);\n  }\n\n  updateOption() {\n    const incomeOperationsFormat = this.formatToMonth(\n      this.localStorage.getOperationsByType('income')\n    );\n    const expensOperationsFormat = this.formatToMonth(\n      this.localStorage.getOperationsByType('expens')\n    );\n\n    const incomeCategoriesFormat = this.formatToCategory(\n      this.localStorage.getOperationsByType('income')\n    );\n    const expensCategoriesFormat = this.formatToCategory(\n      this.localStorage.getOperationsByType('expens')\n    );\n\n    const sortedIncome = [...incomeOperationsFormat].sort((a, b) => a.value - b.value);\n    const sortedExpens = [...expensOperationsFormat].sort((a, b) => a.value - b.value);\n\n    const incomeValues = sortedIncome.map(a => a.value);\n    const expensValues = sortedExpens.map(a => a.value);\n\n    const maxCount = Math.max(...incomeValues, ...expensValues);\n\n    const summIncome = incomeValues.reduce((sum, a) => sum + a, 0);\n    const summExpens = expensValues.reduce((sum, a) => sum + a, 0);\n\n    const incomeMonthsArr = sortedIncome.map(a => a.name);\n    const expensMonthsArr = sortedExpens.map(a => a.name);\n    const reverseIncomeValue = incomeValues.map(a => maxCount - a);\n    const reverseExpensValue = expensValues.map(a => maxCount - a);\n\n    const bestCategoryIncomeName = incomeCategoriesFormat[0]?.name || '...';\n    const bestCategoryExpensName = expensCategoriesFormat[0]?.name || '...';\n\n    this._option = {\n      backgroundColor: 'transparent',\n      tooltip: {},\n      title: [\n        {\n          text: 'Доходы',\n          subtext: 'Суммарно: ' + summIncome,\n          left: '25%',\n          textAlign: 'center',\n        },\n        {\n          text: 'Категории доходов',\n          subtext: 'Больше всего доходов: ' + bestCategoryIncomeName,\n          left: '75%',\n          textAlign: 'center',\n        },\n        {\n          text: 'Расходы',\n          subtext: 'Суммарно: ' + summExpens,\n          left: '25%',\n          top: '50%',\n          textAlign: 'center',\n        },\n        {\n          text: 'Категории расходов',\n          subtext: 'Больше всего трат: ' + bestCategoryExpensName,\n          left: '75%',\n          top: '50%',\n          textAlign: 'center',\n        },\n      ],\n      grid: [\n        {\n          top: '8%',\n          width: '50%',\n          bottom: '50%',\n          left: 10,\n          containLabel: true,\n        },\n        {\n          top: '56%',\n          width: '50%',\n          bottom: 0,\n          left: 10,\n          containLabel: true,\n        },\n      ],\n      xAxis: [\n        {\n          type: 'value',\n          max: maxCount,\n          splitLine: {\n            show: false,\n          },\n        },\n        {\n          type: 'value',\n          max: maxCount,\n          gridIndex: 1,\n          splitLine: {\n            show: false,\n          },\n        },\n      ],\n      yAxis: [\n        {\n          type: 'category',\n          data: incomeMonthsArr,\n          axisLabel: {\n            interval: 0,\n            rotate: 30,\n          },\n          splitLine: {\n            show: false,\n          },\n        },\n        {\n          gridIndex: 1,\n          type: 'category',\n          data: expensMonthsArr,\n          axisLabel: {\n            interval: 0,\n            rotate: 30,\n          },\n          splitLine: {\n            show: false,\n          },\n        },\n      ],\n      series: [\n        {\n          type: 'bar',\n          stack: 'chart',\n          z: 3,\n          label: {\n            position: 'right',\n            show: true,\n          },\n          data: incomeValues,\n        },\n        {\n          type: 'bar',\n          stack: 'chart',\n          silent: true,\n          itemStyle: {\n            color: this.theme.darkTheme() ? '#353232ee' : '#eeee',\n          },\n          data: reverseIncomeValue,\n        },\n        {\n          type: 'bar',\n          stack: 'component',\n          xAxisIndex: 1,\n          yAxisIndex: 1,\n          z: 3,\n          label: {\n            position: 'right',\n            show: true,\n          },\n          data: expensValues,\n        },\n        {\n          type: 'bar',\n          stack: 'component',\n          silent: true,\n          xAxisIndex: 1,\n          yAxisIndex: 1,\n          itemStyle: {\n            color: this.theme.darkTheme() ? '#353232ee' : '#eeee',\n          },\n          data: reverseExpensValue,\n        },\n        {\n          type: 'pie',\n          radius: [0, '30%'],\n          center: ['75%', '25%'],\n          data: incomeCategoriesFormat,\n        },\n        {\n          type: 'pie',\n          radius: [0, '30%'],\n          center: ['75%', '75%'],\n          data: expensCategoriesFormat,\n        },\n      ],\n    };\n  }\n\n  formatToMonth(data: IOperation[]): { name: string; value: number }[] {\n    const allOperations = data.sort((a, b) => a.date.getTime() - b.date.getTime());\n    const resultMap = new Map();\n    let currentDate = new Date(this.filter.startYearInteval());\n    let endDate = new Date(this.filter.endYearInteval());\n    do {\n      const key = this.datePipe.transform(isNaN(currentDate.getTime()) ? new Date() : currentDate, 'MMMM');\n      resultMap.set(key, { name: key, value: 0 });\n      currentDate.setMonth(currentDate.getMonth() + 1);\n    } while (currentDate <= endDate);\n\n    for (const operation of allOperations) {\n      const key = this.datePipe.transform(operation.date, 'MMMM');\n      const mapElemet = resultMap.get(key);\n      resultMap.set(key, {\n        name: key,\n        value: mapElemet.value + operation.value,\n      });\n    }\n\n    const res = Array.from(resultMap.values());\n    return res;\n  }\n\n  formatToCategory(data: IOperation[]): { name: string; value: number }[] {\n    const resultMap = new Map();\n    data.forEach((item) => {\n      const category = item.category;\n      if (!resultMap.has(category)) {\n        resultMap.set(category, { name: category, value: 0 });\n      }\n      const currentValue = resultMap.get(category).value;\n      resultMap.set(category, { name: category, value: currentValue + item.value });\n    });\n    const res = Array.from(resultMap.values());\n    return res;\n  }\n\n\n  ngAfterViewInit() {\n    this.init();\n    this.setOption();\n  }\n\n  ngOnDestroy() {\n    this._chart?.dispose();\n  }\n\n  @HostListener('window:resize')\n  onWindowResize() {\n    if (this._chart) {\n      this._chart.resize();\n    }\n  }\n\n  get hasData(): boolean {\n    return this.localStorage.allOperations().length > 0;\n  }\n}\n", "<div class=\"position-relative d-flex justify-content-around h-25rem\">\n  <div\n    id=\"chart-container\"\n    class=\"w-100\"\n    [class.opacity-50]=\"!hasData\"\n    style=\"height: 800px; max-width: 100vw;\"\n  ></div>\n  @if(!hasData){\n  <div class=\"position-absolute top-0 left-0 w-100 h-100 z-3 d-flex justify-content-center align-items-center\" >\n    Нет данных\n  </div>\n  }\n</div>", "import { Component, signal } from '@angular/core';\nimport { ChartMega } from '../../components/Components_Chart/charts/ChartMega/chartMega.component';\n@Component({\n  selector: 'my-app-main-page',\n  imports: [ChartMega],\n  standalone: true,\n  templateUrl: './chartPage.html',\n})\nexport class ChartsPage {\n  protected readonly title = signal('fms-angular-app');\n\n  constructor() {}\n\n}\n", "<div class='h-100 w-100'>\n  <my-chart-mega/>\n</div>"],
  "mappings": "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",
  "names": []
}

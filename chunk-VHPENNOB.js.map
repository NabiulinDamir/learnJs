{
  "version": 3,
  "sources": ["src/app/components/Components_Chart/charts/ChartWithNegative/chartWithNegative.component.ts", "src/app/components/Components_Chart/charts/ChartWithNegative/chartWithNegative.html"],
  "sourcesContent": ["import { Component, OnDestroy, HostListener, effect } from '@angular/core';\nimport * as echarts from 'echarts';\nimport { LocalStorage } from '../../../../servises/LocalStorage.service';\nimport { DatePipe } from '@angular/common';\nimport { Filter } from '../../../../servises/filter.service';\nimport { IOperation } from '../../../../models/dataTypes.model';\nimport { Theme } from '../../../../servises/theme.service';\n\n@Component({\n  selector: 'my-chart-negative',\n  providers: [DatePipe],\n  templateUrl: './chartWithNegative.html',\n})\nexport class ChartWithNegative implements OnDestroy {\n  private _chart: echarts.ECharts | undefined = undefined;\n  private _option: any | undefined = undefined;\n  constructor(\n    private localStorage: LocalStorage,\n    private datePipe: DatePipe,\n    public filter: Filter,\n    public theme: Theme\n  ) {\n    effect(() => {\n      this.updateOption();\n      this.setOption();\n    });\n    effect(() => {\n      this.init();\n      this.setOption();\n    });\n  }\n\n  init(): void {\n    const theme = this.theme.darkTheme() ? 'dark' : '';\n    const chartDom = document.getElementById('chart-negative-container');\n    this._chart?.dispose();\n    if (!chartDom?.clientHeight) {\n      return;\n    }\n\n    this._chart = echarts.init(chartDom, theme);\n    this._chart.off('click');\n    this._chart.on('click', (params: any) => {\n      this.clickToChart(params);\n    });\n  }\n\n  setOption(): void {\n    this._chart?.setOption(this._option);\n  }\n\n  updateOption(): void {\n    const data = this.format(this.localStorage.filter(this.localStorage.allOperations()));\n    const intervalLocaleRu = this.filter.intervalLocale()\n    this._option = {\n      backgroundColor: 'transparent',\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n          type: 'shadow',\n        },\n      },\n      title: {\n        text: `Орерации за ${intervalLocaleRu}`,\n        position: 'top',\n      },\n      grid: {\n        top: 80,\n        bottom: 30,\n      },\n      yAxis: {\n        type: 'value',\n        position: 'top',\n        splitLine: {\n          lineStyle: {\n            type: 'dashed',\n          },\n        },\n      },\n      xAxis: {\n        data: data.map((item) => item.name),\n        type: 'category',\n        axisLine: { show: false },\n        axisLabel: {},\n        axisTick: { show: false },\n        splitLine: { show: false },\n      },\n      series: [\n        {\n          markLine: {\n            data: [\n              {\n                yAxis: 0,\n                lineStyle: {\n                  color: '#0d6efd',\n                  width: 2,\n                },\n                label: { show: false },\n              },\n            ],\n          },\n          name: 'Итого',\n          type: 'bar',\n          stack: 'Total',\n          label: {\n            show: true,\n            formatter: '{c}',\n          },\n          itemStyle: {\n            color: (params: any) => {\n              if (params.value > 0) {\n                return '#28a745';\n              } else if (params.value < 0) {\n                return '#dc3545';\n              } else {\n                return '#000000';\n              }\n            },\n          },\n          data: data,\n        },\n      ],\n    };\n  }\n\n  format(data: IOperation[]): { name: string; value: number; date: Date }[] {\n    const allOperations = data.sort((a, b) => a.date.getTime() - b.date.getTime());\n\n    const resultMap = new Map();\n\n    let currentDate = new Date(this.filter.startInterval());\n    let endDate = new Date(this.filter.endInterval());\n\n    do {\n      const key = this.formatDate(currentDate);\n      resultMap.set(key, { name: key, value: 0, date: currentDate });\n      if (this.filter.interval() === 'day') {\n        currentDate.setHours(currentDate.getHours() + 1);\n      } else if (this.filter.interval() === 'month') {\n        currentDate.setDate(currentDate.getDate() + 1);\n      } else if (this.filter.interval() === 'year') {\n        currentDate.setMonth(currentDate.getMonth() + 1);\n      } else {\n        currentDate.setDate(currentDate.getDate() + 1);\n      }\n    } while (currentDate <= endDate);\n\n    for (const operation of allOperations) {\n      const key = this.formatDate(operation.date);\n      const mapElemet = resultMap.get(key);\n      const incomeValue = operation.type === 'income' ? operation.value : 0;\n      const expensValue = operation.type === 'expens' ? -operation.value : 0;\n      if (!mapElemet) {\n        resultMap.set(key, { name: key, value: incomeValue + expensValue, date: operation.date });\n      } else {\n        resultMap.set(key, {\n          name: key,\n          value: mapElemet.value + incomeValue + expensValue,\n          date: operation.date,\n        });\n      }\n    }\n\n    const res = Array.from(resultMap.values());\n    return res;\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////\n\n  clickToChart(params: any): void {\n    if (params.componentType === 'series') {\n      this.filter.downInterval();\n      setTimeout(() => this.filter.setDate(params.data.date), 100);\n    }\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////\n\n  formatDate(date: Date): string | null {\n    const pattern = () => {\n      switch (this.filter.interval()) {\n        case 'day':\n          return 'H';\n        case 'month':\n          return 'dd';\n        case 'year':\n          return 'MMMM';\n        default:\n          return 'dd.MM.yyyy';\n      }\n    };\n    return this.datePipe.transform(date, pattern());\n  }\n\n  ngAfterViewInit() {}\n\n  ngOnDestroy() {\n    this._chart?.dispose();\n  }\n\n  @HostListener('window:resize')\n  onWindowResize() {\n    if (this._chart) {\n      this._chart.resize();\n    }\n  }\n\n  get hasData(): boolean {\n    return this.localStorage.filter(this.localStorage.allOperations()).length > 0;\n  }\n}\n", "<div class=\"position-relative w-100 d-flex justify-content-around h-100 \">\n  <div\n    id=\"chart-negative-container\"\n    [class.opacity-50]=\"!hasData\"\n    style=\"width: 70rem; max-width: 100vw;\"\n  ></div>\n  @if(!hasData){\n  <div\n    class=\"position-absolute top-0 left-0 w-100 h-100 z-3 d-flex justify-content-center align-items-center\"\n  >\n    Нет данных\n  </div>\n  }\n</div>"],
  "mappings": "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",
  "names": []
}
